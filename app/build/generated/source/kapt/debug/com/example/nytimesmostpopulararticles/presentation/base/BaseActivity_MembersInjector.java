// Generated by Dagger (https://dagger.dev).
package com.example.nytimesmostpopulararticles.presentation.base;

import androidx.databinding.ViewDataBinding;
import dagger.MembersInjector;
import dagger.android.DispatchingAndroidInjector;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class BaseActivity_MembersInjector<T extends ViewDataBinding, V extends BaseViewModel> implements MembersInjector<BaseActivity<T, V>> {
  private final Provider<DispatchingAndroidInjector<Object>> fragmentDispatchingAndroidInjectorProvider;

  public BaseActivity_MembersInjector(
      Provider<DispatchingAndroidInjector<Object>> fragmentDispatchingAndroidInjectorProvider) {
    this.fragmentDispatchingAndroidInjectorProvider = fragmentDispatchingAndroidInjectorProvider;
  }

  public static <T extends ViewDataBinding, V extends BaseViewModel> MembersInjector<BaseActivity<T, V>> create(
      Provider<DispatchingAndroidInjector<Object>> fragmentDispatchingAndroidInjectorProvider) {
    return new BaseActivity_MembersInjector<T, V>(fragmentDispatchingAndroidInjectorProvider);}

  @Override
  public void injectMembers(BaseActivity<T, V> instance) {
    injectFragmentDispatchingAndroidInjector(instance, fragmentDispatchingAndroidInjectorProvider.get());
  }

  @InjectedFieldSignature("com.example.nytimesmostpopulararticles.presentation.base.BaseActivity.fragmentDispatchingAndroidInjector")
  public static <T extends ViewDataBinding, V extends BaseViewModel> void injectFragmentDispatchingAndroidInjector(
      BaseActivity<T, V> instance,
      DispatchingAndroidInjector<Object> fragmentDispatchingAndroidInjector) {
    instance.fragmentDispatchingAndroidInjector = fragmentDispatchingAndroidInjector;
  }
}
