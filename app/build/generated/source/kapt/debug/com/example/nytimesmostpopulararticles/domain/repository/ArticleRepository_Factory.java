// Generated by Dagger (https://dagger.dev).
package com.example.nytimesmostpopulararticles.domain.repository;

import com.example.nytimesmostpopulararticles.data.remote.ApiService;
import dagger.internal.Factory;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ArticleRepository_Factory implements Factory<ArticleRepository> {
  private final Provider<ApiService> apiServiceProvider;

  private final Provider<String> apiKeyProvider;

  public ArticleRepository_Factory(Provider<ApiService> apiServiceProvider,
      Provider<String> apiKeyProvider) {
    this.apiServiceProvider = apiServiceProvider;
    this.apiKeyProvider = apiKeyProvider;
  }

  @Override
  public ArticleRepository get() {
    return newInstance(apiServiceProvider.get(), apiKeyProvider.get());
  }

  public static ArticleRepository_Factory create(Provider<ApiService> apiServiceProvider,
      Provider<String> apiKeyProvider) {
    return new ArticleRepository_Factory(apiServiceProvider, apiKeyProvider);
  }

  public static ArticleRepository newInstance(ApiService apiService, String apiKey) {
    return new ArticleRepository(apiService, apiKey);
  }
}
